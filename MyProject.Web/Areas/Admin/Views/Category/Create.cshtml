@model MyProject.Data.Category
@{
	ViewBag.Title = "Create";
	Layout = null;
}
<div class="modal-header">
	<h5 class="modal-title">Create</h5>
	<button type="button" class="close" data-dismiss="modal" aria-label="Close">
		<i aria-hidden="true" class="ki ki-close"></i>
	</button>
</div>
<div class="modal-body">
   
        <form id="createform" action="/Admin/Category/Create/" name="form" enctype="multipart/form-data" class="form-file-custom" onsubmit="return form_file_custom(this)">
            @Html.AntiForgeryToken()
            <div class="alert alert-danger text-center" id="divMessage" style="display:none"></div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-lg-4 col-sm-4 text-center form-group ">
                <div class="image-input image-input-outline" id="kt_image_1">
                    <div class="image-input-wrapper" style="background-image:url('/Assets/AppFiles/Images/default.png')"></div>
                    <label class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="change" data-toggle="tooltip" title="" data-original-title="Change logo">
                        <i class="fa fa-pen icon-sm text-muted"></i>
                        <input type="file" name="Icon" id="Icon" accept=".png, .jpg, .jpeg" class="img-upload" data-width="75" data-height="75" data-size="300" @*300 kb*@ onchange="imgUpload(this);" />
                        <input type="hidden" name="profile_avatar_remove" />
                    </label>
                    <span class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow cancelimage" data-action="cancel" data-toggle="tooltip" title="Cancel avatar">
                        <i class="ki ki-bold-close icon-xs text-muted"></i>
                    </span>
                </div>
                <span class="form-text text-muted">Icon 75 x 75 (300 kb)</span>
            </div>

            <div class="col-lg-4 col-sm-4 text-center form-group">
                <div class="image-input image-input-outline" id="kt_image_2">
                    <div class="image-input-wrapper" style="background-image: url('/Assets/AppFiles/Images/default.png')"></div>
                    <label class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="change" data-toggle="tooltip" title="" data-original-title="Change logo">
                        <i class="fa fa-pen icon-sm text-muted"></i>
                        <input type="file" name="Image" id="Image" accept=".png, .jpg, .jpeg" class="img-upload" data-width="400" data-height="400" data-size="500" @*300 kb*@ onchange="imgUpload(this);" />
                        <input type="hidden" name="profile_avatar_remove" />
                    </label>
                    <span class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow cancelimage" data-action="cancel" data-toggle="tooltip" title="Cancel avatar">
                        <i class="ki ki-bold-close icon-xs text-muted"></i>
                    </span>
                </div>
                <span class="form-text text-muted">Image 400 x 400 (500 kb)</span>
            </div>

            <div class="col-lg-4 col-sm-4 text-center form-group">
                <div class="image-input image-input-outline" id="kt_image_3">
                    <div class="image-input-wrapper" style="background-image: url('/Assets/AppFiles/Images/default.png')"></div>
                    <label class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="change" data-toggle="tooltip" title="" data-original-title="Change logo">
                        <i class="fa fa-pen icon-sm text-muted"></i>
                        <input type="file" name="Thumbnail" id="Thumbnail" accept=".png, .jpg, .jpeg" class="img-upload" data-width="400" data-height="400" data-size="500" @*300 kb*@ onchange="imgUpload(this);" />
                        <input type="hidden" name="profile_avatar_remove" />
                    </label>
                    <span class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow cancelimage" data-action="cancel" data-toggle="tooltip" title="Cancel avatar">
                        <i class="ki ki-bold-close icon-xs text-muted"></i>
                    </span>
                </div>
                <span class="form-text text-muted">Thumbnail 400 x 400 (500 kb)</span>
            </div>

        </div>
            <div class="row">
                @*<div class="col-md-12 col-sm-12">
            <div class="form-group">
                <label class="control-label">Parent Category</label>
                <div class="input-group mb-2">
                    @Html.DropDownList("ParentCategoryID", null, "Select Parent Category", htmlAttributes: new { @class = "form-control" })@Html.ValidationMessageFor(model => model.ParentCategoryID, "", new { @class = "text-danger" })
                    <div class="input-group-append"><span class="input-group-text"><i class="fa fa-server"></i></span></div>
                </div>
            </div>
        </div>*@
                <div class="col-md-6 col-sm-12">
                    <div class="form-group">
                        <label class="control-label">Category Name</label>
                        <div class="input-group mb-2">
                            @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control required-custom", placeholder = "Enter category name here ..." } })
                            <div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div>
                        </div>
                            @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6 col-sm-12">
                    <div class="form-group">
                        <label class="control-label">Category Name (Ar)</label>
                        <div class="input-group mb-2">
                            @Html.EditorFor(model => model.CategoryNameAr, new { htmlAttributes = new { @class = "form-control required-custom",dir="rtl", placeholder = "Enter category name (Ar) here ..."} })
                            <div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div>
                        </div>
                            @Html.ValidationMessageFor(model => model.CategoryNameAr, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6 col-sm-12">
                    <div class="form-group">
                        <label class="control-label">Sort (Order)</label>
                        <div class="input-group mb-2">
                            @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control required-custom", id = "position", placeholder = "Enter position here ..."} })
                            <div class="input-group-append"><span class="input-group-text"><i class="fa fa-link"></i></span></div>
                        </div>
                            @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="col-md-6 col-sm-12">
                    <div class="form-group">
                        <label class="control-label">Slug</label>
                        <div class="input-group mb-2">
                            @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control required-custom", placeholder = "Enter Slug name here ...", @readonly = "readonly" } })
                            <div class="input-group-append"><span class="input-group-text"><i class="fa fa-link"></i></span></div>
                        </div>
                            @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="col-md-2 col-sm-12">
            <div class="form-group">
                <label class="control-label">IsDefault</label>
                <span class="switch">
                    <label>
                        <input type="checkbox" id="IsDefault" name="IsDefault" />
                        <span></span>
                    </label>
                </span>
            </div>
        </div>*@
                <div class="col-md-6 col-sm-6">
                    <div class="form-group">
                        <label class="control-label">Description</label>
                        <div class="input-group mb-2">
                            <textarea class="form-control" name="Description" id="Description" rows="6" placeholder="Enter Description name here..."></textarea>
                        </div>
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6 col-sm-6">
                    <div class="form-group">
                        <label class="control-label">Description (AR)</label>
                        <div class="input-group mb-2">
                            <textarea class="form-control" name="DescriptionAR" id="DescriptionAR" rows="6" dir="rtl" placeholder="Enter Description name here..."></textarea>
                        </div>
                        @Html.ValidationMessageFor(model => model.DescriptionAR, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            </form>
    </div>
<div class="modal-footer">
	<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
	<button type="submit" class="btn btn-custom" form="createform">Submit</button>
</div>
<script>
	var _URL = window.URL || window.webkitURL;
    var KTImageInputDemo = function () {
        // Private functions
        var initDemos = function () {
            var avatar1 = new KTImageInput('kt_image_1');
            var avatar2 = new KTImageInput('kt_image_2');
            var avatar3 = new KTImageInput('kt_image_3');
        }

        return {
            // public functions
            init: function () {
                initDemos();
            }
        };
    }();
    KTUtil.ready(function () {
        KTImageInputDemo.init();

	$(document).ready(function () {
		//Image Validation Begin
        //$("#Icon").change(function (e) {
        //    

        //    var file, img;

        //    if ((file = this.files[0])) {

        //        img = new Image();
        //        img.onload = function () {


        //            if (this.width < 387 || this.width > 387) {
        //                Swal.fire({
        //                    icon: 'error',
        //                    title: 'Oops...',
        //                    text: 'Image dimension should be equal to 387x350!',

        //                }).then(function (result) {
        //                    $("#Icon").attr("src", "/Assets/AppFiles/Images/default.png");
        //                    $(".cancelimage").trigger('click');
        //                });
        //            }
        //            else if (this.height < 350 || this.height > 350) {
        //                Swal.fire({
        //                    icon: 'error',
        //                    title: 'Oops...',
        //                    text: 'Image dimension should be equal to 387x350!',

        //                }).then(function (result) {
        //                    $("#Icon").attr("src", "/Assets/AppFiles/Images/default.png");
        //                    $(".cancelimage").trigger('click');
        //                });
        //            }
        //            else if (file.size > 500000) {
        //                Swal.fire({
        //                    icon: 'error',
        //                    title: 'Oops...',
        //                    text: 'Image size must be less than 500 kb!',

        //                }).then(function (result) {
        //                    $("#Icon").attr("src", "/Assets/AppFiles/Images/default.png");
        //                    $(".cancelimage").trigger('click');
        //                });
        //            }
        //            else {
        //                img.onerror = function () {
        //                    alert("not a valid file: " + file.type);
        //                };
        //            }
        //        };
        //        img.src = _URL.createObjectURL(file);
        //    }
        //});
        //$("#Image").change(function (e) {
        //    

        //    var file, img;

        //    if ((file = this.files[0])) {

        //        img = new Image();
        //        img.onload = function () {


        //            if (this.width < 387 || this.width > 387) {
        //                Swal.fire({
        //                    icon: 'error',
        //                    title: 'Oops...',
        //                    text: 'Image dimension should be equal to 387x350!',

        //                }).then(function (result) {
        //                    $("#Image").attr("src", "/Assets/AppFiles/Images/default.png");
        //                    $(".cancelimage").trigger('click');
        //                });
        //            }
        //            else if (this.height < 350 || this.height > 350) {
        //                Swal.fire({
        //                    icon: 'error',
        //                    title: 'Oops...',
        //                    text: 'Image dimension should be equal to 387x350!',

        //                }).then(function (result) {
        //                    $("#Image").attr("src", "/Assets/AppFiles/Images/default.png");
        //                    $(".cancelimage").trigger('click');
        //                });
        //            }
        //            else if (file.size > 500000) {
        //                Swal.fire({
        //                    icon: 'error',
        //                    title: 'Oops...',
        //                    text: 'Image size must be less than 500 kb!',

        //                }).then(function (result) {
        //                    $("#Image").attr("src", "/Assets/AppFiles/Images/default.png");
        //                    $(".cancelimage").trigger('click');
        //                });
        //            }
        //            else {
        //                img.onerror = function () {
        //                    alert("not a valid file: " + file.type);
        //                };
        //            }
        //        };
        //        img.src = _URL.createObjectURL(file);
        //    }
        //});
		//Image Validation End

		

		//$("#Userform").submit(function () {

		//	$(this).closest('.modal').find('button[type=submit]').addClass('spinner spinner-sm spinner-left').attr('disabled', true);

		//	var data = new FormData();
		//	var files = $("#logo").get(0).files;
		//	if (files.length > 0) {
		//		data.append("Image", files[0]);
		//	}
		//	/*data.append("ParentCategoryID", $('#ParentCategoryID').val());*/
		//	data.append("CategoryName", $('#CategoryName').val());
		//	data.append("CategoryNameAr", $('#CategoryNameAr').val());
		//	data.append("Slug", $('#Slug').val());
		//	data.append("Description", $('#Description').val());
		//	data.append("DescriptionAR", $('#DescriptionAR').val());
		//	data.append("Position", $("#position").val());

		//	//data.append('IsDefault', $('#IsDefault').prop('checked'));
		//	data.append("__RequestVerificationToken", $('input[name=__RequestVerificationToken]').val());

		//	$.ajax({
		//		url: "/Admin/Category/Create/",
		//		type: "POST",
		//		processData: false,
		//		contentType: false,
		//		data: data,
		//		success: function (response) {

		//			if (callback) {
		//				callback($('#myModalContent'), element, false, response);
		//			}
		//		},
		//		error: function (er) {
		//			toastr.error(er);
		//		}
		//	});
		//	return false;
		//});

		$("#CategoryName").on('change', function () {
			var name = $(this);
			$("#Slug").val($(name).val().replace(/ /g, "-").replace(/'/g, "").toLocaleLowerCase());
		});
	});
    });


</script>
