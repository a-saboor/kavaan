@model MyProject.Data.Appointment


@{
	ViewBag.Title = "Create";
	Layout = null;
}
<style>
	.video-frame {
		width: 100%;
		height: auto;
		box-shadow: 0 0 6px 3px #0000004f;
		border-radius: 5px;
		padding: 10px;
	}
</style>

<div class="modal-header">
	<h5 class="modal-title">Details</h5>
	<button type="button" class="close" data-dismiss="modal" aria-label="Close">
		<i aria-hidden="true" class="ki ki-close"></i>
	</button>
</div>
<div class="modal-body">

	@using (Html.BeginForm("Edit", "Appointment", new { area = "Admin" }, FormMethod.Post, new { enctype = "multipart/form-data", id = "frm-edit", @class = "form" }))
	{
		<fieldset disabled>
			@Html.AntiForgeryToken()
			<div class="alert alert-danger text-center" id="divMessage" style="display:none"></div>
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })

		<div class="row">


			<div class="col-md-6 col-sm-12">
				<div class="form-group">
					<label class="control-label">Customer Name</label>
					<div class="input-group mb-2">
						@Html.EditorFor(model => model.Customer.UserName, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", placeholder = "Enter customer here ...", required = "required" } })
						<div class="input-group-append"><span class="input-group-text"><i class="fa fa-user"></i></span></div>

					</div>
				</div>
			</div>
			<div class="col-md-6 col-sm-12">
				<div class="form-group">
					<label class="control-label">Email</label>
					<div class="input-group mb-2">
						@Html.EditorFor(model => model.Customer.Email, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", placeholder = "Enter email here ...", required = "required" } })
						<div class="input-group-append"><span class="input-group-text"><i class="fa fa-envelope"></i></span></div>
					</div>
				</div>
			</div>
			<div class="col-md-6 col-sm-12">
				<div class="form-group">
					<label class="control-label">Appointment Date</label>
					<div class="input-group mb-2">
						<input class="form-control" readonly type="date" id="last-start-date" value="@string.Format("{0:yyyy-MM-dd}", Model.AppointmentDate)" />

						<div class="input-group-append"><span class="input-group-text"><i class="fa fa-calendar"></i></span></div>
					</div>
					@Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="col-md-6 col-sm-6">
				<div class="form-group">
					<label class="control-label">Appointment Type</label>
					<div class="input-group mb-2">
						@Html.EditorFor(model => model.Type, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", placeholder = "Enter appointment type here ...", required = "required" } })
						<div class="input-group-append"><span class="input-group-text"><i class="fa fa-server"></i></span></div>
					</div>
					@Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
				</div>
			</div>
			@*<div class="col-md-3 col-sm-12">
			<div class="form-group">
				<label class="control-label">Appointment Type(Ar)</label>
				<div class="input-group mb-3">
					@Html.EditorFor(model => model.TypeAr, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", placeholder = "Enter appointment type (Ar) here ...", required = "required" } })
					<div class="input-group-append"><span class="input-group-text"><i class="fa fa-server"></i></span></div>
				</div>
				@Html.ValidationMessageFor(model => model.TypeAr, "", new { @class = "text-danger" })
			</div>
		</div>*@
			<div class="col-md-6 col-sm-6">
				<div class="form-group row">
					<label class="col-5 col-form-label" for="IsCompleted">Appointment Completed</label>
					@*<div class="input-group mb-2">*@
					<span class="switch col-2 col-form-label">
						<label>
							@Html.CheckBoxFor(model => model.IsCompleted, new { @class = "form-control" })
							<span></span>
						</label>
					</span>
					@*</div>*@
				</div>
			</div>
			@*<div class="col-md-12 col-sm-12">
			<div class="form-group">
				<label class="control-label">Remarks</label>
				<div class="input-group mb-2">
					@Html.Raw(
						Html.TextAreaFor(model => model.Remarks, 5, 10, new { @class = "form-control", placeholder = "Enter description  here ...", @readonly = "readonly" })
						)
				</div>
				@Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
			</div>
		</div>*@

			<div class="col-md-12 col-sm-12">
				<div class="form-group">
					<label class="control-label">Remarks</label>
					<div class="card card-body bg-dark-o-30 m-0 py-10 px-5 max-h-250px overflow-auto">
						@Html.Raw(Model.Remarks)
					</div>
				</div>
			</div>

		</div>
		</fieldset>
	}
</div>
<div class="modal-footer">
	<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>

</div>
<script>
	var SuccessMessage = '@ViewBag.SuccessMessage';
	var ErrorMessage = '@ViewBag.ErrorMessage';
</script>




<!--end::Page Scripts-->
<!--end::Page Scripts-->
