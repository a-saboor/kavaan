@model MyProject.Data.Customer

@{
	ViewBag.Title = "Details";
	Layout = null;
}
<link rel="stylesheet" href="@Url.ContentVersioned("~/Assets/css/intlTelInput/intlTelInput.css")">
<div class="modal-header">
	<h5 class="modal-title">Update</h5>
	<button type="button" class="close" data-dismiss="modal" aria-label="Close">
		<i aria-hidden="true" class="ki ki-close"></i>
	</button>
</div>
<div class="modal-body">

	@Html.AntiForgeryToken()
	<fieldset disabled>
		<div class="row">
			<div class="col-md-12 col-sm-12">
				<div class="form-group">
					<label class="control-label">Full Name</label>
					<div class="input-group mb-2">
						@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter name here ...", required = "required" } })
						@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
						<div class="input-group-append">
							<span class="input-group-text">
								<i class="fa fa-user"></i>
							</span>
						</div>
					</div>
				</div>
			</div>
			<div class="col-md-6 col-sm-12">
				<div class="form-group intr-form-group">
					<label class="control-label">Contact</label>
					<div class="input-group mb-2 flex-nowrap">
						@Html.HiddenFor(model => model.PhoneCode, new { @class = "code" })
						@Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control intr-phone w-100 rounded-right-0", placeholder = "Enter contact here ...", @readonly = "readonly" } })
						@Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
						<div class="input-group-append">
							<span class="input-group-text"><i class="fa fa-phone"></i></span>
						</div>
					</div>
				</div>
			</div>
			<div class="col-md-6 col-sm-12">
				<div class="form-group">
					<label class="control-label">Email</label>
					<div class="input-group mb-2">
						@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter email here ...", required = "required" } })
						@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
						<div class="input-group-append">
							<span class="input-group-text"><i class="fa fa-envelope"></i></span>
						</div>
					</div>
				</div>
			</div>
			@*<div class="col-md-6 col-sm-12">
					<div class="form-group">
						<label class="control-label">Address</label>
						<div class="input-group mb-2">
							@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter address here ...", required = "required" } })
							@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
							<div class="input-group-append">
								<span class="input-group-text"><i class="fa fa-home"></i></span>
							</div>
						</div>
					</div>
				</div>
				<div class="col-md-6 col-sm-12">
					<div class="form-group">
						<label class="control-label">Country</label>
						<div class="input-group mb-2">
							@Html.DropDownList("CountryID", null, "Select country", htmlAttributes: new { @class = "form-control", required = "required" })@Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
							<div class="input-group-append">
								<span class="input-group-text">
									<i class="fa fa-flag"></i>
								</span>
							</div>
						</div>
					</div>
				</div>
				<div class="col-md-6 col-sm-12">
					<div class="form-group">
						<label class="control-label">City</label>
						<div class="input-group mb-2">
							@Html.DropDownList("CityID", null, "Select city", htmlAttributes: new { @class = "form-control", required = "required" })
							@Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
							<div class="input-group-append">
								<span class="input-group-text">
									<i class="fa fa-home"></i>
								</span>
							</div>
						</div>
					</div>
				</div>
				<div class="col-md-6 col-sm-12">
					<div class="form-group">
						<label class="control-label">Area</label>
						<div class="input-group mb-2">
							@Html.DropDownList("AreaID", null, "Select area", htmlAttributes: new { @class = "form-control", required = "required", id = "AreaID" })
							@Html.ValidationMessageFor(model => model.AreaID, "", new { @class = "text-danger" })
							<div class="input-group-append">
								<span class="input-group-text"><i class="fa fa-server"></i></span>
							</div>
						</div>
					</div>
				</div>*@
			@*<div class="col-md-6 col-sm-12" hidden>
				<div class="form-group">
					<label class="control-label">Password</label>
					<div class="input-group mb-2">@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password", placeholder = "Enter Password here ...", required = "required" } })
					@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
					<div class="input-group-append">
						<span class="input-group-text">
						<i class="fa fa-tag"></i>
						</span>
						</div>
					</div>
					</div>
				</div>*@
			@*<div class="col-md-6 col-sm-12">
					<div class="form-group">
						<label class="control-label">Account Type</label>
						<div class="input-group mb-2">
							<select class="col-sm-12 form-control" name="AccountType" id="AccountType">
								<option value="Basic">Basic</option>
								<option value="Premium">Premium</option>
							</select>
							<div class="input-group-append">
								<span class="input-group-text"><i class="fa fa-tag"></i></span>
							</div>
						</div>
					</div>
				</div>*@
		</div>
	</fieldset>
</div>
<div class="modal-footer">
	<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>

</div>

<script src="@Url.ContentVersioned("~/Assets/js/intlTelInput/intlTelInput.js")"></script>
<script>

    jQuery(document).ready(function () {

        $("#CountryID").val("@Model.CountryID");
        $("#CityID").val("@Model.CityID");
        $("#AreaID").val("@Model.AreaID");
        $("#AccountType").val("@Model.AccountType");

	    $('#CountryID').change(function () {

			var count = 0;
			var $dropdown = $("#CityID");
			if ($(this).val() == 0) {
				$dropdown.empty();
				$dropdown.append($("<option />").val('').text("Please Select Country First!"));
			}
			else {
				$.ajax({
					type: 'GET',
					url: '/Admin/Customer/GetCitiesByCountry?id=' + $(this).val(),
					success: function (response) {
						$dropdown.empty();
						$dropdown.append($("<option />").val('').text("Select City"));

						$.each(response.data, function (k, v) {
							$dropdown.append($("<option />").val(v.value).text(v.text));
							count++;
						});
					}
				});
			}
	    });

	    $('#CityID').change(function () {

	        var count = 0;
	        var $dropdown = $("#AreaID");
	        if ($(this).val() == 0) {
	            $dropdown.empty();
	            $dropdown.append($("<option />").val('').text("Please Select City First!"));
	        }
	        else {
	            $.ajax({
	                type: 'GET',
	                url: '/Admin/Customer/GetAreasByCity?id=' + $(this).val(),
	                success: function (response) {
	                    $dropdown.empty();
	                    $dropdown.append($("<option />").val('').text("Select Area"));

	                    $.each(response.data, function (k, v) {
	                        $dropdown.append($("<option />").val(v.value).text(v.text));
	                        count++;
	                    });
	                }
	            });
	        }
	    });
	});
</script>
