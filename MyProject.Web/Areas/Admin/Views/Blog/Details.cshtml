@model MyProject.Data.Blog
@{
	ViewBag.Title = "Details";
	Layout = null;
}

<style>
	.video-frame {
		width: 100%;
		height: auto;
		box-shadow: 0 0.5rem 1.5rem 0.5rem rgb(0 0 0 / 8%);
		border-radius: 5px;
		padding: 10px;
	}

	.introduction-video {
		width: auto;
		height: 300px;
		margin-left: auto;
		margin-right: auto;
		display: block;
	}
</style>
<div class="modal-header">
	<h5 class="modal-title">Details</h5>
	<button type="button" class="close" data-dismiss="modal" aria-label="Close">
		<i aria-hidden="true" class="ki ki-close"></i>
	</button>
</div>
<div class="modal-body">
	<div class="row">

		<div class="col-md-12 col-sm-12">
			<div class="float-right">
				<i class="fa fa-calendar"></i>
				<b>@Html.Label("Creation Date:", htmlAttributes: new { @class = "control-label" })</b>
				@if (Model.CreatedOn.HasValue)
				{
					var date = Model.CreatedOn.Value.ToString(MyProject.Web.Helpers.CustomHelper.GetDateFormat);
					<label class="control-label" readonly="readonly">@date</label>
				}
				else
				{
					<label class="control-label" readonly="readonly"> - </label>
				}
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-md-12 col-sm-12 text-center">
			<div class="flex-shrink-0 mr-7">
				<div class="symbol symbol-50 symbol-lg-120">
					<img alt="Pic" src="@Model.BannerImage" style="object-fit:cover">
				</div>
			</div>
		</div>
		<hr />
		<div class="col-md-12 col-sm-12">
			<div class="form-group">
				<label class="control-label">Title</label>
				<div class="input-group mb-2">
					<label class="form-control" readonly="readonly"> @Model.Title</label>
					<div class="input-group-append"><span class="input-group-text"><i class="fa fa-server"></i></span></div>
				</div>
			</div>
		</div>
		@*<div class="col-md-6 col-sm-12">
			<div class="form-group">
				<label class="control-label">Title (Ar)</label>
				<div class="input-group mb-2">
					<label class="form-control" readonly="readonly"> @Model.TitleAr</label>
					<div class="input-group-append"><span class="input-group-text"><i class="fa fa-server"></i></span></div>
				</div>
			</div>
		</div>*@
		<div class="col-md-12 col-sm-12">
			<div class="form-group">
				<label class="control-label">Description</label>
				<div class="input-group mb-2">
					@*<div class="card card-body m-0 py-5 px-5 max-h-300px overflow-auto">
						@Html.Raw(Model.TitleDescription)
					</div>*@
					<textarea rows="2" class="form-control" readonly>@Model.TitleDescription</textarea>
				</div>
			</div>
		</div>
		<!--<div class="col-md-6 col-sm-12">
			<div class="form-group">
				<label class="control-label">Description(Ar)</label>
				<div class="input-group mb-2">-->
					@*<div class="card card-body m-0 py-5 px-5 max-h-300px overflow-auto">
						@Html.Raw(Model.TitleDescriptionAr)
					</div>*@
					<!--<textarea rows="2" class="form-control" readonly>@Model.TitleDescriptionAr</textarea>
				</div>
			</div>
		</div>-->
	</div>
	<div class="col-md-12 d-flex justify-content-center mb-12">
		<div class="col-md-8 col-sm-12">
			<div class="video-frame">
				<video controls class="introduction-video w-100">
					<source src="@Url.Content(string.IsNullOrEmpty(Model.Video) ? Model.Video = "abc"  : Model.Video)" type="video/mp4" />
				</video>
			</div>
		</div>
	</div>
	<br />
	<div class="row">
		<div class="col-md-6 col-sm-12">
			<div class="form-group">
				<label class="control-label">Twitter Url</label>
				<div class="input-group mb-2">
					@Html.EditorFor(model => model.TwitterUrl, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", placeholder = "", required = "required" } })
					<div class="input-group-append">
						<span class="input-group-text"><i class="fab fa-twitter"></i></span>
					</div>
				</div>
			</div>
		</div>
		<div class="col-md-6 col-sm-12">
			<div class="form-group">
				<label class="control-label">Facebook URL</label>
				<div class="input-group mb-2">
					@Html.EditorFor(model => model.FacebookURL, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", placeholder = "", required = "required" } })
					<div class="input-group-append">
						<span class="input-group-text"><i class="fab fa-facebook"></i></span>
					</div>
				</div>
			</div>
		</div>
		<div class="col-md-6 col-sm-12">
			<div class="form-group">
				<label class="control-label">LinkedIn Url</label>
				<div class="input-group mb-2">
					@Html.EditorFor(model => model.LinkedinURL, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", placeholder = "", required = "required" } })
					<div class="input-group-append">
						<span class="input-group-text"><i class="fab fa-linkedin"></i></span>
					</div>
				</div>
			</div>
		</div>
		<div class="col-md-6 col-sm-12">
			<div class="form-group">
				<label class="control-label">Instagram Url</label>
				<div class="input-group mb-2">
					@Html.EditorFor(model => model.InstagramURL, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", placeholder = "", required = "required" } })
					<div class="input-group-append">
						<span class="input-group-text"><i class="fab fa-instagram"></i></span>
					</div>
				</div>
			</div>
		</div>
		<div class="col-md-6 col-sm-12">
			<div class="form-group">
				<label class="control-label">Email Address</label>
				<div class="input-group mb-2">
					@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", placeholder = "", required = "required" } })
					<div class="input-group-append">
						<span class="input-group-text"><i class="fa fa-envelope"></i></span>
					</div>
				</div>
			</div>
		</div>

		<div class="col-md-6 col-sm-12">
			<div class="form-group">
				<label class="control-label">Author</label>
				<div class="input-group mb-2">
					@Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", placeholder = "", required = "required" } })
					<div class="input-group-append">
						<span class="input-group-text"><i class="fa fa-user"></i></span>
					</div>
				</div>
			</div>
		</div>
		<div class="col-md-6 col-sm-12">
			<div class="form-group">
				<label class="control-label">Post Position</label>
				<div class="input-group mb-2">
					@Html.TextBoxFor(model => model.Position, new { @type = "number", @class = "form-control", @readonly = "readonly", @min = "0", @max = "100000" })
					<div class="input-group-append">
						<span class="input-group-text"><i class="fa fa-sort-numeric-up"></i></span>
					</div>
				</div>
			</div>
		</div>

		<div class="col-md-6 col-sm-12">
			<label class="control-label">Blog Date</label>
			<div class="input-daterange input-group kt_datepicker_range">
				@Html.EditorFor(model => model.PostedDate, new { htmlAttributes = new { @class = "form-control kt_datepicker_range date-format-1", type = "text", id = "PostedDate", placeholder = " MM/DD/YYYY", @readonly = "readonly" } })
				<div class="input-group-append">
					<span class="input-group-text">
						<i class="fa fa-calendar"></i>
					</span>
				</div>
			</div>
		</div>

		<div class="col-md-3 col-sm-6">
			<div class="form-group">
				<label class="control-label">Enable Featured</label>
				<div class="input-group mb-2">
					<span class="switch">
						<label>
							@*@{

								}
								@Html.CheckBox("IsFeatured", false)*@
							@if (Model.IsFeatured != null && Model.IsFeatured == true)
							{
								@Html.CheckBox("IsFeatured", true, new { @disabled = "disabled" })
							}
							else
							{
								@Html.CheckBox("IsFeatured", false, new { @disabled = "disabled" })
							}
							<span></span>
						</label>
					</span>
				</div>
			</div>
		</div>

	</div>
</div>
<div class="modal-footer">
	<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
</div>
<script>
    setTimeout(function () { dateFormat(1); }, 500);
</script>


