@model MyProject.Data.Amenity

@{
    ViewBag.Title = "Create";
    Layout = null;
}


<div class="modal-header">
    <h5 class="modal-title">Create</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <i aria-hidden="true" class="ki ki-close"></i>
    </button>
</div>
<div class="modal-body">

    <div class="card-body">
        <form id="create" form="create">
            @Html.AntiForgeryToken()

            <div class="alert alert-danger text-center" id="divMessage" style="display:none"></div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group row">
                <div class="col-lg-12 text-center">
                    <div class="image-input image-input-outline" id="kt_image_1">
                        <div class="image-input-wrapper"
                             style="background-image: url('../../../../Assets/AppFiles/Images/default.png')"></div>
                        <label class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow"
                               data-action="change" data-toggle="tooltip" title="" data-original-title="Change logo">
                            <i class="fa fa-pen icon-sm text-muted"></i>
                            @*<input type="file" name="Image" id="cover" accept=".png, .jpg, .jpeg" />*@
                            <input type="file" name="Image" class="img-upload" data-width="140" data-height="140" data-size="140" id="cover" accept=".png, .jpg, .jpeg" onchange="imgUpload(this);" />
                            <input type="hidden" name="profile_avatar_remove" />
                        </label>
                        <span class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow cancelimage"
                              data-action="cancel" data-toggle="tooltip" title="Cancel avatar">
                            <i class="ki ki-bold-close icon-xs text-muted"></i>
                        </span>
                    </div>
                    <span class="form-text text-muted">
                        Image dimensions should be 140 x 140 pixels and Image size must be less
                        than 140 kb
                    </span>
                </div>
            </div>
            <div class="row">


                <div class="col-md-12 col-sm-12">
                    <div class="form-group">
                        <label class="control-label">Title</label>
                        <div class="input-group mb-2">
                            @Html.EditorFor(model => model.Name, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control",
                               placeholder = "Enter name here ...",
                               required = "required"
                           }
                       })
                            <div class="input-group-append">
                                <span class="input-group-text"><i class="fa fa-server"></i></span>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="col-md-6 col-sm-12">
                    <div class="form-group">
                        <label class="control-label">Title (Ar)</label>
                        <div class="input-group mb-2">
                            @Html.EditorFor(model => model.NameAr, new
                       {
                           htmlAttributes = new
                           {
                               @class = "form-control",
                               placeholder = "...Enter title (Ar) here",
                               required = "required",
                               dir = "rtl"
                           }
                       })
                            <div class="input-group-append">
                                <span class="input-group-text"><i class="fa fa-server"></i></span>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.NameAr, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6 col-sm-12">
                    <div class="form-group">
                        <label class="control-label">Description</label>
                        <div class="input-group mb-2">
                            @Html.TextAreaFor(model => model.Description, new
                       {
                           @class = "form-control",
                           placeholder = "Enter description here ...",
                           rows = "2"
                       })
                        </div>
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6 col-sm-12">
                    <div class="form-group">
                        <label class="control-label">Description(Ar)</label>
                        <div class="input-group mb-3">
                            @Html.TextAreaFor(model => model.DescriptionAr, new
                       {
                           @class = "form-control",
                           placeholder = "Enter description (Ar) here ...",
                           rows = "2",
                           dir = "rtl"
                       })

                        </div>
                        @Html.ValidationMessageFor(model => model.DescriptionAr, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            </div>

        </form>
    </div>
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
    <button type="submit" class="btn btn-custom" form="create">Submit</button>
</div>

<script>
    // Class definition
    var KTImageInputDemo = function () {
        // Private functions
        var initDemos = function () {

            var avatar1 = new KTImageInput('kt_image_1');
        }

        return {
            // public functions
            init: function () {
                initDemos();
            }
        };
    }();

    'use strict';
    KTUtil.ready(function () {
        KTImageInputDemo.init();
    });

    //var _URL = window.URL || window.webkitURL;
    //Image Validation Begin
    //$("#cover").change(function (e) {


    //    var file, img;

    //    if ((file = this.files[0])) {

    //        img = new Image();
    //        img.onload = function () {

    //            if (this.width < 140 || this.width > 140) {
    //                Swal.fire({
    //                    icon: 'error',
    //                    title: 'Oops...',
    //                    text: 'Image dimension should be 140 x 140 !',

    //                }).then(function (result) {
    //                    $("#cover").attr("src", "/Assets/AppFiles/Images/default.png");
    //                    $(".cancelimage").trigger('click');
    //                });
    //            }
    //            else if (this.height < 140 || this.height > 140) {
    //                Swal.fire({
    //                    icon: 'error',
    //                    title: 'Oops...',
    //                    text: 'Image dimension should be 140 x 140 !',

    //                }).then(function (result) {
    //                    $("#cover").attr("src", "/Assets/AppFiles/Images/default.png");
    //                    $(".cancelimage").trigger('click');
    //                });
    //            }
    //            else if (this.size > 140000) {
    //                Swal.fire({
    //                    icon: 'error',
    //                    title: 'Oops...',
    //                    text: 'Image size must be less than 140 kb!',

    //                }).then(function (result) {
    //                    $("#cover").attr("src", "/Assets/AppFiles/Images/default.png");
    //                    $(".cancelimage").trigger('click');
    //                });
    //            }
    //            else {
    //                img.onerror = function () {
    //                    alert("not a valid file: " + file.type);
    //                };
    //            }
    //        };
    //        img.src = _URL.createObjectURL(file);
    //    }
    //});
    //Image Validation End


    $("#create").submit(function () {
        var data = new FormData();
        data.append("Image", $("#cover")[0].files[0]);;
        data.append("Name", $("#Name").val());
        data.append("NameAr", $("#NameAr").val());
        data.append("Description", $("#Description").val());
        data.append("DescriptionAr", $("#DescriptionAr").val());
        data.append("__RequestVerificationToken", $('input[name=__RequestVerificationToken]').val());

        $.ajax({
            url: "/Admin/Amenity/Create/",
            type: "POST",
            processData: false,
            contentType: false,
            data: data,
            success: function (response) {

                if (callback) {
                    callback($('#myModalContent'), element, true, response);
                }
            },
            error: function (er) {

                toastr.error(er.message);
            }
        });
        return false;
    });
</script>


