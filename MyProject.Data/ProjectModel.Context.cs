//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyProject.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Project_DB_Entities : DbContext
    {
        public Project_DB_Entities()
            : base("name=Project_DB_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Amenity> Amenities { get; set; }
        public virtual DbSet<Appointment> Appointments { get; set; }
        public virtual DbSet<Area> Areas { get; set; }
        public virtual DbSet<AssetImage> AssetImages { get; set; }
        public virtual DbSet<Asset> Assets { get; set; }
        public virtual DbSet<AssetsCategory> AssetsCategories { get; set; }
        public virtual DbSet<AssetsContractor> AssetsContractors { get; set; }
        public virtual DbSet<AssetsProduct> AssetsProducts { get; set; }
        public virtual DbSet<AssetsSpecification> AssetsSpecifications { get; set; }
        public virtual DbSet<Attribute> Attributes { get; set; }
        public virtual DbSet<Award> Awards { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<Banner> Banners { get; set; }
        public virtual DbSet<Blog> Blogs { get; set; }
        public virtual DbSet<BookingCancellation> BookingCancellations { get; set; }
        public virtual DbSet<BookingImage> BookingImages { get; set; }
        public virtual DbSet<Booking> Bookings { get; set; }
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<BusinessBranchSetting> BusinessBranchSettings { get; set; }
        public virtual DbSet<BusinessSetting> BusinessSettings { get; set; }
        public virtual DbSet<CandidateEducation> CandidateEducations { get; set; }
        public virtual DbSet<CandidateExperience> CandidateExperiences { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Community> Communities { get; set; }
        public virtual DbSet<CommunityFeature> CommunityFeatures { get; set; }
        public virtual DbSet<CommunityImage> CommunityImages { get; set; }
        public virtual DbSet<Consultant> Consultants { get; set; }
        public virtual DbSet<ContentManagement> ContentManagements { get; set; }
        public virtual DbSet<Contractor> Contractors { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<CouponCategory> CouponCategories { get; set; }
        public virtual DbSet<CouponRedemption> CouponRedemptions { get; set; }
        public virtual DbSet<Coupon> Coupons { get; set; }
        public virtual DbSet<CustomerCoupon> CustomerCoupons { get; set; }
        public virtual DbSet<CustomerDocument> CustomerDocuments { get; set; }
        public virtual DbSet<CustomerDocumentDetail> CustomerDocumentDetails { get; set; }
        public virtual DbSet<CustomerDocumentType> CustomerDocumentTypes { get; set; }
        public virtual DbSet<CustomerLoyaltySetting> CustomerLoyaltySettings { get; set; }
        public virtual DbSet<CustomerRelation> CustomerRelations { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomerSession> CustomerSessions { get; set; }
        public virtual DbSet<CustomerSuggestion> CustomerSuggestions { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Development> Developments { get; set; }
        public virtual DbSet<EmailSetting> EmailSettings { get; set; }
        public virtual DbSet<Enquiry> Enquiries { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<Faq> Faqs { get; set; }
        public virtual DbSet<Feature> Features { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
        public virtual DbSet<Introduction> Introductions { get; set; }
        public virtual DbSet<IntroductionImage> IntroductionImages { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<JobCandidate> JobCandidates { get; set; }
        public virtual DbSet<JobOpening> JobOpenings { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<NewsFeed> NewsFeeds { get; set; }
        public virtual DbSet<NotificationReceiver> NotificationReceivers { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<NumberRange> NumberRanges { get; set; }
        public virtual DbSet<Ozone> Ozones { get; set; }
        public virtual DbSet<OzoneImage> OzoneImages { get; set; }
        public virtual DbSet<Partner> Partners { get; set; }
        public virtual DbSet<PaymentGatewaySetting> PaymentGatewaySettings { get; set; }
        public virtual DbSet<PaymentMethod> PaymentMethods { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductAttribute> ProductAttributes { get; set; }
        public virtual DbSet<ProductAttributeSetting> ProductAttributeSettings { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<ProductImage> ProductImages { get; set; }
        public virtual DbSet<ProductRating> ProductRatings { get; set; }
        public virtual DbSet<ProductRatingImage> ProductRatingImages { get; set; }
        public virtual DbSet<ProductReturn> ProductReturns { get; set; }
        public virtual DbSet<ProductReturnImage> ProductReturnImages { get; set; }
        public virtual DbSet<ProductTag> ProductTags { get; set; }
        public virtual DbSet<ProductVariant> ProductVariants { get; set; }
        public virtual DbSet<ProductVariationAttribute> ProductVariationAttributes { get; set; }
        public virtual DbSet<ProductVariationImage> ProductVariationImages { get; set; }
        public virtual DbSet<ProductVariation> ProductVariations { get; set; }
        public virtual DbSet<Progress> Progresses { get; set; }
        public virtual DbSet<Property> Properties { get; set; }
        public virtual DbSet<PropertyFeature> PropertyFeatures { get; set; }
        public virtual DbSet<PropertyImage> PropertyImages { get; set; }
        public virtual DbSet<PropertyProgress> PropertyProgresses { get; set; }
        public virtual DbSet<Quotation> Quotations { get; set; }
        public virtual DbSet<QuotationDetail> QuotationDetails { get; set; }
        public virtual DbSet<QuotationNote> QuotationNotes { get; set; }
        public virtual DbSet<Route> Routes { get; set; }
        public virtual DbSet<ServicebookingImage> ServicebookingImages { get; set; }
        public virtual DbSet<ServiceBooking> ServiceBookings { get; set; }
        public virtual DbSet<ServiceImage> ServiceImages { get; set; }
        public virtual DbSet<ServiceRating> ServiceRatings { get; set; }
        public virtual DbSet<Service> Services { get; set; }
        public virtual DbSet<ShippingClass> ShippingClasses { get; set; }
        public virtual DbSet<Staff> Staffs { get; set; }
        public virtual DbSet<StaffRole> StaffRoles { get; set; }
        public virtual DbSet<StaffSession> StaffSessions { get; set; }
        public virtual DbSet<StaffSuggestion> StaffSuggestions { get; set; }
        public virtual DbSet<Subscriber> Subscribers { get; set; }
        public virtual DbSet<Tag> Tags { get; set; }
        public virtual DbSet<TaxSetting> TaxSettings { get; set; }
        public virtual DbSet<Team> Teams { get; set; }
        public virtual DbSet<TicketDocument> TicketDocuments { get; set; }
        public virtual DbSet<TicketMessage> TicketMessages { get; set; }
        public virtual DbSet<Ticket> Tickets { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
        public virtual DbSet<UnitAmenity> UnitAmenities { get; set; }
        public virtual DbSet<UnitBooking> UnitBookings { get; set; }
        public virtual DbSet<UnitBookingsPaymentHistory> UnitBookingsPaymentHistories { get; set; }
        public virtual DbSet<UnitEnquiry> UnitEnquiries { get; set; }
        public virtual DbSet<UnitImage> UnitImages { get; set; }
        public virtual DbSet<UnitPaymentPlan> UnitPaymentPlans { get; set; }
        public virtual DbSet<Unit> Units { get; set; }
        public virtual DbSet<UnitType> UnitTypes { get; set; }
        public virtual DbSet<UserRolePrivilege> UserRolePrivileges { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<VendorDocument> VendorDocuments { get; set; }
        public virtual DbSet<VendorIndustry> VendorIndustries { get; set; }
        public virtual DbSet<VendorPackage> VendorPackages { get; set; }
        public virtual DbSet<Vendor> Vendors { get; set; }
        public virtual DbSet<VendorSection> VendorSections { get; set; }
        public virtual DbSet<VendorService> VendorServices { get; set; }
        public virtual DbSet<VendorSession> VendorSessions { get; set; }
        public virtual DbSet<VendorSuggestion> VendorSuggestions { get; set; }
        public virtual DbSet<VendorTransactionHistory> VendorTransactionHistories { get; set; }
        public virtual DbSet<VendorType> VendorTypes { get; set; }
        public virtual DbSet<VendorUser> VendorUsers { get; set; }
        public virtual DbSet<VendorUserRole> VendorUserRoles { get; set; }
        public virtual DbSet<VendorUserRolePrivilege> VendorUserRolePrivileges { get; set; }
        public virtual DbSet<VendorWalletShare> VendorWalletShares { get; set; }
        public virtual DbSet<VendorWalletShareHistory> VendorWalletShareHistories { get; set; }
        public virtual DbSet<VendorWalletShareHistoryOrder> VendorWalletShareHistoryOrders { get; set; }
        public virtual DbSet<VendorWithdrawalRequest> VendorWithdrawalRequests { get; set; }
        public virtual DbSet<BookingReview> BookingReviews { get; set; }
        public virtual DbSet<IntroductionSetting> IntroductionSettings { get; set; }
        public virtual DbSet<ProjectImage> ProjectImages { get; set; }
        public virtual DbSet<ProjectType> ProjectTypes { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<ProjectTag> ProjectTags { get; set; }
    
        public virtual int PR_InsertArea(string name, string nameAr, string countryName, string cityName, Nullable<System.DateTime> createdOn, Nullable<bool> isDeleted, Nullable<bool> isActive)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("NameAr", nameAr) :
                new ObjectParameter("NameAr", typeof(string));
    
            var countryNameParameter = countryName != null ?
                new ObjectParameter("CountryName", countryName) :
                new ObjectParameter("CountryName", typeof(string));
    
            var cityNameParameter = cityName != null ?
                new ObjectParameter("CityName", cityName) :
                new ObjectParameter("CityName", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_InsertArea", nameParameter, nameArParameter, countryNameParameter, cityNameParameter, createdOnParameter, isDeletedParameter, isActiveParameter);
        }
    
        public virtual int PR_InsertCity(string name, string nameAr, string country, Nullable<System.DateTime> createdOn, Nullable<bool> isDeleted)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("NameAr", nameAr) :
                new ObjectParameter("NameAr", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_InsertCity", nameParameter, nameArParameter, countryParameter, createdOnParameter, isDeletedParameter);
        }
    
        public virtual int PR_InsertCountry(string name, string nameAr, Nullable<bool> isActive, Nullable<System.DateTime> createdOn, Nullable<bool> isDeleted)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("NameAr", nameAr) :
                new ObjectParameter("NameAr", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_InsertCountry", nameParameter, nameArParameter, isActiveParameter, createdOnParameter, isDeletedParameter);
        }
    
        public virtual int PR_InsertCoupons(string name, string couponCode, Nullable<long> frequency, Nullable<int> maxRedumption, string type, Nullable<decimal> value, Nullable<decimal> maxAmount, Nullable<System.DateTime> expiry, Nullable<bool> isOpenToAll, Nullable<System.DateTime> createdOn, Nullable<bool> isDeleted, Nullable<bool> isActive)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var couponCodeParameter = couponCode != null ?
                new ObjectParameter("CouponCode", couponCode) :
                new ObjectParameter("CouponCode", typeof(string));
    
            var frequencyParameter = frequency.HasValue ?
                new ObjectParameter("Frequency", frequency) :
                new ObjectParameter("Frequency", typeof(long));
    
            var maxRedumptionParameter = maxRedumption.HasValue ?
                new ObjectParameter("MaxRedumption", maxRedumption) :
                new ObjectParameter("MaxRedumption", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(decimal));
    
            var maxAmountParameter = maxAmount.HasValue ?
                new ObjectParameter("MaxAmount", maxAmount) :
                new ObjectParameter("MaxAmount", typeof(decimal));
    
            var expiryParameter = expiry.HasValue ?
                new ObjectParameter("Expiry", expiry) :
                new ObjectParameter("Expiry", typeof(System.DateTime));
    
            var isOpenToAllParameter = isOpenToAll.HasValue ?
                new ObjectParameter("IsOpenToAll", isOpenToAll) :
                new ObjectParameter("IsOpenToAll", typeof(bool));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_InsertCoupons", nameParameter, couponCodeParameter, frequencyParameter, maxRedumptionParameter, typeParameter, valueParameter, maxAmountParameter, expiryParameter, isOpenToAllParameter, createdOnParameter, isDeletedParameter, isActiveParameter);
        }
    
        public virtual int PR_InsertProduct(Nullable<long> vendorID, string brand, string sKU, string slug, string name, string thumbnail, string shortDescription, string longDescription, string mobileDescription, Nullable<decimal> regularPrice, Nullable<decimal> salePrice, Nullable<System.DateTime> salePriceFrom, Nullable<System.DateTime> salePriceTo, Nullable<int> stock, Nullable<int> threshold, string type, Nullable<double> weight, Nullable<double> length, Nullable<double> width, Nullable<double> height, Nullable<bool> isSoldIndividually, Nullable<bool> allowMultipleOrder, string status, Nullable<int> stockStatus, Nullable<bool> isFeatured, Nullable<bool> isRecommended, Nullable<bool> isManageStock, Nullable<System.DateTime> createdOn, Nullable<bool> isActive, Nullable<bool> isApproved, Nullable<int> approvalStatus, Nullable<bool> isDeleted, string productCategory, string productTags)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            var brandParameter = brand != null ?
                new ObjectParameter("Brand", brand) :
                new ObjectParameter("Brand", typeof(string));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            var slugParameter = slug != null ?
                new ObjectParameter("Slug", slug) :
                new ObjectParameter("Slug", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var thumbnailParameter = thumbnail != null ?
                new ObjectParameter("Thumbnail", thumbnail) :
                new ObjectParameter("Thumbnail", typeof(string));
    
            var shortDescriptionParameter = shortDescription != null ?
                new ObjectParameter("ShortDescription", shortDescription) :
                new ObjectParameter("ShortDescription", typeof(string));
    
            var longDescriptionParameter = longDescription != null ?
                new ObjectParameter("LongDescription", longDescription) :
                new ObjectParameter("LongDescription", typeof(string));
    
            var mobileDescriptionParameter = mobileDescription != null ?
                new ObjectParameter("MobileDescription", mobileDescription) :
                new ObjectParameter("MobileDescription", typeof(string));
    
            var regularPriceParameter = regularPrice.HasValue ?
                new ObjectParameter("RegularPrice", regularPrice) :
                new ObjectParameter("RegularPrice", typeof(decimal));
    
            var salePriceParameter = salePrice.HasValue ?
                new ObjectParameter("SalePrice", salePrice) :
                new ObjectParameter("SalePrice", typeof(decimal));
    
            var salePriceFromParameter = salePriceFrom.HasValue ?
                new ObjectParameter("SalePriceFrom", salePriceFrom) :
                new ObjectParameter("SalePriceFrom", typeof(System.DateTime));
    
            var salePriceToParameter = salePriceTo.HasValue ?
                new ObjectParameter("SalePriceTo", salePriceTo) :
                new ObjectParameter("SalePriceTo", typeof(System.DateTime));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            var thresholdParameter = threshold.HasValue ?
                new ObjectParameter("Threshold", threshold) :
                new ObjectParameter("Threshold", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("Length", length) :
                new ObjectParameter("Length", typeof(double));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(double));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(double));
    
            var isSoldIndividuallyParameter = isSoldIndividually.HasValue ?
                new ObjectParameter("IsSoldIndividually", isSoldIndividually) :
                new ObjectParameter("IsSoldIndividually", typeof(bool));
    
            var allowMultipleOrderParameter = allowMultipleOrder.HasValue ?
                new ObjectParameter("AllowMultipleOrder", allowMultipleOrder) :
                new ObjectParameter("AllowMultipleOrder", typeof(bool));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var stockStatusParameter = stockStatus.HasValue ?
                new ObjectParameter("StockStatus", stockStatus) :
                new ObjectParameter("StockStatus", typeof(int));
    
            var isFeaturedParameter = isFeatured.HasValue ?
                new ObjectParameter("IsFeatured", isFeatured) :
                new ObjectParameter("IsFeatured", typeof(bool));
    
            var isRecommendedParameter = isRecommended.HasValue ?
                new ObjectParameter("IsRecommended", isRecommended) :
                new ObjectParameter("IsRecommended", typeof(bool));
    
            var isManageStockParameter = isManageStock.HasValue ?
                new ObjectParameter("IsManageStock", isManageStock) :
                new ObjectParameter("IsManageStock", typeof(bool));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var approvalStatusParameter = approvalStatus.HasValue ?
                new ObjectParameter("ApprovalStatus", approvalStatus) :
                new ObjectParameter("ApprovalStatus", typeof(int));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var productCategoryParameter = productCategory != null ?
                new ObjectParameter("ProductCategory", productCategory) :
                new ObjectParameter("ProductCategory", typeof(string));
    
            var productTagsParameter = productTags != null ?
                new ObjectParameter("ProductTags", productTags) :
                new ObjectParameter("ProductTags", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_InsertProduct", vendorIDParameter, brandParameter, sKUParameter, slugParameter, nameParameter, thumbnailParameter, shortDescriptionParameter, longDescriptionParameter, mobileDescriptionParameter, regularPriceParameter, salePriceParameter, salePriceFromParameter, salePriceToParameter, stockParameter, thresholdParameter, typeParameter, weightParameter, lengthParameter, widthParameter, heightParameter, isSoldIndividuallyParameter, allowMultipleOrderParameter, statusParameter, stockStatusParameter, isFeaturedParameter, isRecommendedParameter, isManageStockParameter, createdOnParameter, isActiveParameter, isApprovedParameter, approvalStatusParameter, isDeletedParameter, productCategoryParameter, productTagsParameter);
        }
    
        public virtual int PR_InsertProductAttributes(Nullable<long> productID, string attributeName, string attributeValue, Nullable<System.DateTime> createdOn, Nullable<bool> variationUsage)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var attributeNameParameter = attributeName != null ?
                new ObjectParameter("AttributeName", attributeName) :
                new ObjectParameter("AttributeName", typeof(string));
    
            var attributeValueParameter = attributeValue != null ?
                new ObjectParameter("AttributeValue", attributeValue) :
                new ObjectParameter("AttributeValue", typeof(string));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            var variationUsageParameter = variationUsage.HasValue ?
                new ObjectParameter("VariationUsage", variationUsage) :
                new ObjectParameter("VariationUsage", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_InsertProductAttributes", productIDParameter, attributeNameParameter, attributeValueParameter, createdOnParameter, variationUsageParameter);
        }
    
        public virtual int PR_InsertProductCategories(Nullable<long> productID, string productCategory)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var productCategoryParameter = productCategory != null ?
                new ObjectParameter("ProductCategory", productCategory) :
                new ObjectParameter("ProductCategory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_InsertProductCategories", productIDParameter, productCategoryParameter);
        }
    
        public virtual int PR_InsertProductTags(Nullable<long> productID, string productTags)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var productTagsParameter = productTags != null ?
                new ObjectParameter("ProductTags", productTags) :
                new ObjectParameter("ProductTags", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_InsertProductTags", productIDParameter, productTagsParameter);
        }
    
        public virtual int PR_InsertProductVariationAttributes(Nullable<long> productID, string attributeName, string attributeValue, Nullable<long> productVariatioID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var attributeNameParameter = attributeName != null ?
                new ObjectParameter("AttributeName", attributeName) :
                new ObjectParameter("AttributeName", typeof(string));
    
            var attributeValueParameter = attributeValue != null ?
                new ObjectParameter("AttributeValue", attributeValue) :
                new ObjectParameter("AttributeValue", typeof(string));
    
            var productVariatioIDParameter = productVariatioID.HasValue ?
                new ObjectParameter("ProductVariatioID", productVariatioID) :
                new ObjectParameter("ProductVariatioID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_InsertProductVariationAttributes", productIDParameter, attributeNameParameter, attributeValueParameter, productVariatioIDParameter);
        }
    
        public virtual int PR_InsertProductVariations(Nullable<long> productID, string variantSKU, string variantThumbnail, Nullable<decimal> variantRegularPrice, Nullable<decimal> variantSalePrice, Nullable<System.DateTime> variantSalePriceFrom, Nullable<System.DateTime> varianSalePriceTo, Nullable<int> variantStock, Nullable<int> varianThreshold, Nullable<int> varianStockStatus, Nullable<double> variantWeight, Nullable<double> variantLength, Nullable<double> variantWidth, Nullable<double> variantHeight, string variantDescription, Nullable<bool> variantIsManageStock, Nullable<bool> variantSoldIndividually, Nullable<System.DateTime> variantCreatedon, Nullable<bool> variantIsActive)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var variantSKUParameter = variantSKU != null ?
                new ObjectParameter("VariantSKU", variantSKU) :
                new ObjectParameter("VariantSKU", typeof(string));
    
            var variantThumbnailParameter = variantThumbnail != null ?
                new ObjectParameter("VariantThumbnail", variantThumbnail) :
                new ObjectParameter("VariantThumbnail", typeof(string));
    
            var variantRegularPriceParameter = variantRegularPrice.HasValue ?
                new ObjectParameter("VariantRegularPrice", variantRegularPrice) :
                new ObjectParameter("VariantRegularPrice", typeof(decimal));
    
            var variantSalePriceParameter = variantSalePrice.HasValue ?
                new ObjectParameter("VariantSalePrice", variantSalePrice) :
                new ObjectParameter("VariantSalePrice", typeof(decimal));
    
            var variantSalePriceFromParameter = variantSalePriceFrom.HasValue ?
                new ObjectParameter("VariantSalePriceFrom", variantSalePriceFrom) :
                new ObjectParameter("VariantSalePriceFrom", typeof(System.DateTime));
    
            var varianSalePriceToParameter = varianSalePriceTo.HasValue ?
                new ObjectParameter("VarianSalePriceTo", varianSalePriceTo) :
                new ObjectParameter("VarianSalePriceTo", typeof(System.DateTime));
    
            var variantStockParameter = variantStock.HasValue ?
                new ObjectParameter("VariantStock", variantStock) :
                new ObjectParameter("VariantStock", typeof(int));
    
            var varianThresholdParameter = varianThreshold.HasValue ?
                new ObjectParameter("VarianThreshold", varianThreshold) :
                new ObjectParameter("VarianThreshold", typeof(int));
    
            var varianStockStatusParameter = varianStockStatus.HasValue ?
                new ObjectParameter("VarianStockStatus", varianStockStatus) :
                new ObjectParameter("VarianStockStatus", typeof(int));
    
            var variantWeightParameter = variantWeight.HasValue ?
                new ObjectParameter("VariantWeight", variantWeight) :
                new ObjectParameter("VariantWeight", typeof(double));
    
            var variantLengthParameter = variantLength.HasValue ?
                new ObjectParameter("VariantLength", variantLength) :
                new ObjectParameter("VariantLength", typeof(double));
    
            var variantWidthParameter = variantWidth.HasValue ?
                new ObjectParameter("VariantWidth", variantWidth) :
                new ObjectParameter("VariantWidth", typeof(double));
    
            var variantHeightParameter = variantHeight.HasValue ?
                new ObjectParameter("VariantHeight", variantHeight) :
                new ObjectParameter("VariantHeight", typeof(double));
    
            var variantDescriptionParameter = variantDescription != null ?
                new ObjectParameter("VariantDescription", variantDescription) :
                new ObjectParameter("VariantDescription", typeof(string));
    
            var variantIsManageStockParameter = variantIsManageStock.HasValue ?
                new ObjectParameter("VariantIsManageStock", variantIsManageStock) :
                new ObjectParameter("VariantIsManageStock", typeof(bool));
    
            var variantSoldIndividuallyParameter = variantSoldIndividually.HasValue ?
                new ObjectParameter("VariantSoldIndividually", variantSoldIndividually) :
                new ObjectParameter("VariantSoldIndividually", typeof(bool));
    
            var variantCreatedonParameter = variantCreatedon.HasValue ?
                new ObjectParameter("VariantCreatedon", variantCreatedon) :
                new ObjectParameter("VariantCreatedon", typeof(System.DateTime));
    
            var variantIsActiveParameter = variantIsActive.HasValue ?
                new ObjectParameter("VariantIsActive", variantIsActive) :
                new ObjectParameter("VariantIsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_InsertProductVariations", productIDParameter, variantSKUParameter, variantThumbnailParameter, variantRegularPriceParameter, variantSalePriceParameter, variantSalePriceFromParameter, varianSalePriceToParameter, variantStockParameter, varianThresholdParameter, varianStockStatusParameter, variantWeightParameter, variantLengthParameter, variantWidthParameter, variantHeightParameter, variantDescriptionParameter, variantIsManageStockParameter, variantSoldIndividuallyParameter, variantCreatedonParameter, variantIsActiveParameter);
        }
    
        public virtual int PR_UpdateDeletedCategoryChilds(Nullable<long> categoryID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_UpdateDeletedCategoryChilds", categoryIDParameter);
        }
    
        public virtual int PR_UpdateProductApprovalStatus(Nullable<long> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_UpdateProductApprovalStatus", productIDParameter);
        }
    
        public virtual int PR_UpdateVendorEarning(Nullable<long> bookingID, Nullable<System.DateTime> createdOn)
        {
            var bookingIDParameter = bookingID.HasValue ?
                new ObjectParameter("BookingID", bookingID) :
                new ObjectParameter("BookingID", typeof(long));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_UpdateVendorEarning", bookingIDParameter, createdOnParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_CheckProductStock(Nullable<long> productID, Nullable<int> quantity)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CheckProductStock", productIDParameter, quantityParameter);
        }
    
        public virtual ObjectResult<SP_CheckProductStockAvailability_Result> SP_CheckProductStockAvailability(string products, string productVariations)
        {
            var productsParameter = products != null ?
                new ObjectParameter("Products", products) :
                new ObjectParameter("Products", typeof(string));
    
            var productVariationsParameter = productVariations != null ?
                new ObjectParameter("ProductVariations", productVariations) :
                new ObjectParameter("ProductVariations", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CheckProductStockAvailability_Result>("SP_CheckProductStockAvailability", productsParameter, productVariationsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_CheckProductVariationStock(Nullable<long> productVariationID, Nullable<int> quantity)
        {
            var productVariationIDParameter = productVariationID.HasValue ?
                new ObjectParameter("ProductVariationID", productVariationID) :
                new ObjectParameter("ProductVariationID", typeof(long));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CheckProductVariationStock", productVariationIDParameter, quantityParameter);
        }
    
        public virtual int SP_DeleteProductAttributeValues(Nullable<long> productID, Nullable<long> attributeID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var attributeIDParameter = attributeID.HasValue ?
                new ObjectParameter("AttributeID", attributeID) :
                new ObjectParameter("AttributeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteProductAttributeValues", productIDParameter, attributeIDParameter);
        }
    
        public virtual int SP_ExpireSession(Nullable<long> customerID, string deviceID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var deviceIDParameter = deviceID != null ?
                new ObjectParameter("DeviceID", deviceID) :
                new ObjectParameter("DeviceID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ExpireSession", customerIDParameter, deviceIDParameter);
        }
    
        public virtual ObjectResult<SP_GetAdminDashboardAppointmentChart_Result> SP_GetAdminDashboardAppointmentChart(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAdminDashboardAppointmentChart_Result>("SP_GetAdminDashboardAppointmentChart", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetAdminDashboardBookingGraphByDateRange_Result> SP_GetAdminDashboardBookingGraphByDateRange(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAdminDashboardBookingGraphByDateRange_Result>("SP_GetAdminDashboardBookingGraphByDateRange", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetAdminDashboardCustomerRequestChart_Result> SP_GetAdminDashboardCustomerRequestChart(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAdminDashboardCustomerRequestChart_Result>("SP_GetAdminDashboardCustomerRequestChart", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetAdminDashboardStatsByDateRange_Result> SP_GetAdminDashboardStatsByDateRange(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAdminDashboardStatsByDateRange_Result>("SP_GetAdminDashboardStatsByDateRange", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetAdminDashboardUnitBookingChart_Result> SP_GetAdminDashboardUnitBookingChart(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAdminDashboardUnitBookingChart_Result>("SP_GetAdminDashboardUnitBookingChart", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetAdminDashboardUnitEnquiryChart_Result> SP_GetAdminDashboardUnitEnquiryChart(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAdminDashboardUnitEnquiryChart_Result>("SP_GetAdminDashboardUnitEnquiryChart", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetAdminDashboardYearlyRevenueGraph_Result> SP_GetAdminDashboardYearlyRevenueGraph(string year)
        {
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAdminDashboardYearlyRevenueGraph_Result>("SP_GetAdminDashboardYearlyRevenueGraph", yearParameter);
        }
    
        public virtual ObjectResult<SP_GetAppDashboardStats_Result> SP_GetAppDashboardStats(Nullable<long> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAppDashboardStats_Result>("SP_GetAppDashboardStats", vendorIDParameter);
        }
    
        public virtual ObjectResult<SP_GetBrandFilters_Result> SP_GetBrandFilters(Nullable<long> brandID, string lang)
        {
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(long));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetBrandFilters_Result>("SP_GetBrandFilters", brandIDParameter, langParameter);
        }
    
        public virtual ObjectResult<SP_GetCategories_Result> SP_GetCategories(string lang, string imageServer)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCategories_Result>("SP_GetCategories", langParameter, imageServerParameter);
        }
    
        public virtual ObjectResult<SP_GetCategorywiseProducts_Result> SP_GetCategorywiseProducts(Nullable<System.DateTime> currentDateTime, Nullable<long> categoryID, string search, string lang, string imageServer)
        {
            var currentDateTimeParameter = currentDateTime.HasValue ?
                new ObjectParameter("CurrentDateTime", currentDateTime) :
                new ObjectParameter("CurrentDateTime", typeof(System.DateTime));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(long));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCategorywiseProducts_Result>("SP_GetCategorywiseProducts", currentDateTimeParameter, categoryIDParameter, searchParameter, langParameter, imageServerParameter);
        }
    
        public virtual ObjectResult<SP_GetCustomerCoupons_Result> SP_GetCustomerCoupons(Nullable<long> customerID, Nullable<int> pageNumber)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCustomerCoupons_Result>("SP_GetCustomerCoupons", customerIDParameter, pageNumberParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredAppointments_Result> SP_GetFilteredAppointments(string search, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string lang, Nullable<long> customerID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredAppointments_Result>("SP_GetFilteredAppointments", searchParameter, pageSizeParameter, pageNumberParameter, sortByParameter, langParameter, customerIDParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredBlogs_Result> SP_GetFilteredBlogs(string search, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string lang, string imageServer)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredBlogs_Result>("SP_GetFilteredBlogs", searchParameter, pageSizeParameter, pageNumberParameter, sortByParameter, startDateParameter, endDateParameter, langParameter, imageServerParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredBookings_Result> SP_GetFilteredBookings(string search, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string lang, Nullable<long> customerID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredBookings_Result>("SP_GetFilteredBookings", searchParameter, pageSizeParameter, pageNumberParameter, sortByParameter, langParameter, customerIDParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredCandidates_Result> SP_GetFilteredCandidates(Nullable<int> displayLength, Nullable<int> displayStart, Nullable<int> sortCol, string sortDir, string search, string cVServer, string imageServer, string status, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("DisplayLength", displayLength) :
                new ObjectParameter("DisplayLength", typeof(int));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("DisplayStart", displayStart) :
                new ObjectParameter("DisplayStart", typeof(int));
    
            var sortColParameter = sortCol.HasValue ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(int));
    
            var sortDirParameter = sortDir != null ?
                new ObjectParameter("SortDir", sortDir) :
                new ObjectParameter("SortDir", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var cVServerParameter = cVServer != null ?
                new ObjectParameter("CVServer", cVServer) :
                new ObjectParameter("CVServer", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredCandidates_Result>("SP_GetFilteredCandidates", displayLengthParameter, displayStartParameter, sortColParameter, sortDirParameter, searchParameter, cVServerParameter, imageServerParameter, statusParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredCategories_Result> SP_GetFilteredCategories(string search, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string lang, string imageServer)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredCategories_Result>("SP_GetFilteredCategories", searchParameter, pageSizeParameter, pageNumberParameter, sortByParameter, langParameter, imageServerParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredConsultants_Result> SP_GetFilteredConsultants(string search, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string lang, string imageServer)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredConsultants_Result>("SP_GetFilteredConsultants", searchParameter, pageSizeParameter, pageNumberParameter, sortByParameter, langParameter, imageServerParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredContractors_Result> SP_GetFilteredContractors(string search, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string lang, string imageServer)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredContractors_Result>("SP_GetFilteredContractors", searchParameter, pageSizeParameter, pageNumberParameter, sortByParameter, langParameter, imageServerParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredDevelopment_Result> SP_GetFilteredDevelopment(string search, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string lang, string imageServer)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredDevelopment_Result>("SP_GetFilteredDevelopment", searchParameter, pageSizeParameter, pageNumberParameter, sortByParameter, langParameter, imageServerParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredEvents_Result> SP_GetFilteredEvents(string search, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string lang, string imageServer)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredEvents_Result>("SP_GetFilteredEvents", searchParameter, pageSizeParameter, pageNumberParameter, sortByParameter, langParameter, imageServerParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredNewsfeeds_Result> SP_GetFilteredNewsfeeds(string search, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string lang, string imageServer)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredNewsfeeds_Result>("SP_GetFilteredNewsfeeds", searchParameter, pageSizeParameter, pageNumberParameter, sortByParameter, langParameter, imageServerParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredPartners_Result> SP_GetFilteredPartners(string search, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string lang, string imageServer)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredPartners_Result>("SP_GetFilteredPartners", searchParameter, pageSizeParameter, pageNumberParameter, sortByParameter, langParameter, imageServerParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredProducts_Result> SP_GetFilteredProducts(string search, string categories, Nullable<long> vendorID, Nullable<long> brandID, Nullable<decimal> minPrice, Nullable<decimal> maxPrice, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string filters, Nullable<System.DateTime> currentDateTime, string lang, string imageServer, Nullable<bool> isFeatured, Nullable<bool> isRecommended, Nullable<bool> isSale, Nullable<bool> isTrending)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var categoriesParameter = categories != null ?
                new ObjectParameter("Categories", categories) :
                new ObjectParameter("Categories", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(long));
    
            var minPriceParameter = minPrice.HasValue ?
                new ObjectParameter("MinPrice", minPrice) :
                new ObjectParameter("MinPrice", typeof(decimal));
    
            var maxPriceParameter = maxPrice.HasValue ?
                new ObjectParameter("MaxPrice", maxPrice) :
                new ObjectParameter("MaxPrice", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var filtersParameter = filters != null ?
                new ObjectParameter("Filters", filters) :
                new ObjectParameter("Filters", typeof(string));
    
            var currentDateTimeParameter = currentDateTime.HasValue ?
                new ObjectParameter("CurrentDateTime", currentDateTime) :
                new ObjectParameter("CurrentDateTime", typeof(System.DateTime));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            var isFeaturedParameter = isFeatured.HasValue ?
                new ObjectParameter("IsFeatured", isFeatured) :
                new ObjectParameter("IsFeatured", typeof(bool));
    
            var isRecommendedParameter = isRecommended.HasValue ?
                new ObjectParameter("IsRecommended", isRecommended) :
                new ObjectParameter("IsRecommended", typeof(bool));
    
            var isSaleParameter = isSale.HasValue ?
                new ObjectParameter("IsSale", isSale) :
                new ObjectParameter("IsSale", typeof(bool));
    
            var isTrendingParameter = isTrending.HasValue ?
                new ObjectParameter("IsTrending", isTrending) :
                new ObjectParameter("IsTrending", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredProducts_Result>("SP_GetFilteredProducts", searchParameter, categoriesParameter, vendorIDParameter, brandIDParameter, minPriceParameter, maxPriceParameter, pageSizeParameter, pageNumberParameter, sortByParameter, filtersParameter, currentDateTimeParameter, langParameter, imageServerParameter, isFeaturedParameter, isRecommendedParameter, isSaleParameter, isTrendingParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredProjectUnits_Result> SP_GetFilteredProjectUnits(string search, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string lang, string imageServer, Nullable<long> propertyID, string features, string amenities, Nullable<long> bedRooms, Nullable<long> bathRooms, Nullable<decimal> minPrice, Nullable<decimal> maxPrice, Nullable<long> type)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            var propertyIDParameter = propertyID.HasValue ?
                new ObjectParameter("PropertyID", propertyID) :
                new ObjectParameter("PropertyID", typeof(long));
    
            var featuresParameter = features != null ?
                new ObjectParameter("Features", features) :
                new ObjectParameter("Features", typeof(string));
    
            var amenitiesParameter = amenities != null ?
                new ObjectParameter("Amenities", amenities) :
                new ObjectParameter("Amenities", typeof(string));
    
            var bedRoomsParameter = bedRooms.HasValue ?
                new ObjectParameter("BedRooms", bedRooms) :
                new ObjectParameter("BedRooms", typeof(long));
    
            var bathRoomsParameter = bathRooms.HasValue ?
                new ObjectParameter("BathRooms", bathRooms) :
                new ObjectParameter("BathRooms", typeof(long));
    
            var minPriceParameter = minPrice.HasValue ?
                new ObjectParameter("MinPrice", minPrice) :
                new ObjectParameter("MinPrice", typeof(decimal));
    
            var maxPriceParameter = maxPrice.HasValue ?
                new ObjectParameter("MaxPrice", maxPrice) :
                new ObjectParameter("MaxPrice", typeof(decimal));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredProjectUnits_Result>("SP_GetFilteredProjectUnits", searchParameter, pageSizeParameter, pageNumberParameter, sortByParameter, langParameter, imageServerParameter, propertyIDParameter, featuresParameter, amenitiesParameter, bedRoomsParameter, bathRoomsParameter, minPriceParameter, maxPriceParameter, typeParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredProperties_Result> SP_GetFilteredProperties(string search, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, Nullable<bool> vRTour, string lang, string imageServer, Nullable<long> developmentID, Nullable<bool> isFeatured)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var vRTourParameter = vRTour.HasValue ?
                new ObjectParameter("VRTour", vRTour) :
                new ObjectParameter("VRTour", typeof(bool));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            var developmentIDParameter = developmentID.HasValue ?
                new ObjectParameter("DevelopmentID", developmentID) :
                new ObjectParameter("DevelopmentID", typeof(long));
    
            var isFeaturedParameter = isFeatured.HasValue ?
                new ObjectParameter("IsFeatured", isFeatured) :
                new ObjectParameter("IsFeatured", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredProperties_Result>("SP_GetFilteredProperties", searchParameter, pageSizeParameter, pageNumberParameter, sortByParameter, vRTourParameter, langParameter, imageServerParameter, developmentIDParameter, isFeaturedParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredServiceBookings_Result> SP_GetFilteredServiceBookings(string search, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> vendorID, string status, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortBy)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredServiceBookings_Result>("SP_GetFilteredServiceBookings", searchParameter, startDateParameter, endDateParameter, vendorIDParameter, statusParameter, pageNumberParameter, pageSizeParameter, sortByParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredServices_Result> SP_GetFilteredServices(string search, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string lang, string imageServer, Nullable<long> categoryID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredServices_Result>("SP_GetFilteredServices", searchParameter, pageSizeParameter, pageNumberParameter, sortByParameter, langParameter, imageServerParameter, categoryIDParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredUnits_Result> SP_GetFilteredUnits(string search, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string lang, string imageServer, Nullable<long> propertyID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            var propertyIDParameter = propertyID.HasValue ?
                new ObjectParameter("PropertyID", propertyID) :
                new ObjectParameter("PropertyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredUnits_Result>("SP_GetFilteredUnits", searchParameter, pageSizeParameter, pageNumberParameter, sortByParameter, langParameter, imageServerParameter, propertyIDParameter);
        }
    
        public virtual ObjectResult<SP_GetFVendorServiceBookings_Result> SP_GetFVendorServiceBookings(string search, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> vendorID, string status, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> sortBy)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFVendorServiceBookings_Result>("SP_GetFVendorServiceBookings", searchParameter, startDateParameter, endDateParameter, vendorIDParameter, statusParameter, pageNumberParameter, pageSizeParameter, sortByParameter);
        }
    
        public virtual int SP_GetLastWeekEarning(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> vendorID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetLastWeekEarning", startDateParameter, endDateParameter, vendorIDParameter);
        }
    
        public virtual ObjectResult<SP_GetNewNotifications_Result> SP_GetNewNotifications(Nullable<long> receiverID, string receiverType, Nullable<long> offset, string lang)
        {
            var receiverIDParameter = receiverID.HasValue ?
                new ObjectParameter("ReceiverID", receiverID) :
                new ObjectParameter("ReceiverID", typeof(long));
    
            var receiverTypeParameter = receiverType != null ?
                new ObjectParameter("ReceiverType", receiverType) :
                new ObjectParameter("ReceiverType", typeof(string));
    
            var offsetParameter = offset.HasValue ?
                new ObjectParameter("Offset", offset) :
                new ObjectParameter("Offset", typeof(long));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetNewNotifications_Result>("SP_GetNewNotifications", receiverIDParameter, receiverTypeParameter, offsetParameter, langParameter);
        }
    
        public virtual ObjectResult<SP_GetNotifications_Result> SP_GetNotifications(Nullable<long> receiverID, string receiverType, Nullable<int> pageNumber, string lang)
        {
            var receiverIDParameter = receiverID.HasValue ?
                new ObjectParameter("ReceiverID", receiverID) :
                new ObjectParameter("ReceiverID", typeof(long));
    
            var receiverTypeParameter = receiverType != null ?
                new ObjectParameter("ReceiverType", receiverType) :
                new ObjectParameter("ReceiverType", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetNotifications_Result>("SP_GetNotifications", receiverIDParameter, receiverTypeParameter, pageNumberParameter, langParameter);
        }
    
        public virtual ObjectResult<SP_GetPopularService_Result> SP_GetPopularService(string search, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string lang, string imageServer)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetPopularService_Result>("SP_GetPopularService", searchParameter, pageSizeParameter, pageNumberParameter, sortByParameter, langParameter, imageServerParameter);
        }
    
        public virtual ObjectResult<SP_GetProductAttributes_Result> SP_GetProductAttributes(Nullable<long> productID, string lang)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetProductAttributes_Result>("SP_GetProductAttributes", productIDParameter, langParameter);
        }
    
        public virtual ObjectResult<SP_GetProductDetails_Result> SP_GetProductDetails(Nullable<long> productID, string lang, string imageServer)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetProductDetails_Result>("SP_GetProductDetails", productIDParameter, langParameter, imageServerParameter);
        }
    
        public virtual ObjectResult<SP_GetProductRatings_Result> SP_GetProductRatings(Nullable<long> productID, string imageServer)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetProductRatings_Result>("SP_GetProductRatings", productIDParameter, imageServerParameter);
        }
    
        public virtual ObjectResult<SP_GetProducts_Result> SP_GetProducts(Nullable<int> displayLength, Nullable<int> displayStart, Nullable<int> sortCol, string sortDir, string search, Nullable<long> vendorID, Nullable<bool> isApproved)
        {
            var displayLengthParameter = displayLength.HasValue ?
                new ObjectParameter("DisplayLength", displayLength) :
                new ObjectParameter("DisplayLength", typeof(int));
    
            var displayStartParameter = displayStart.HasValue ?
                new ObjectParameter("DisplayStart", displayStart) :
                new ObjectParameter("DisplayStart", typeof(int));
    
            var sortColParameter = sortCol.HasValue ?
                new ObjectParameter("SortCol", sortCol) :
                new ObjectParameter("SortCol", typeof(int));
    
            var sortDirParameter = sortDir != null ?
                new ObjectParameter("SortDir", sortDir) :
                new ObjectParameter("SortDir", typeof(string));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetProducts_Result>("SP_GetProducts", displayLengthParameter, displayStartParameter, sortColParameter, sortDirParameter, searchParameter, vendorIDParameter, isApprovedParameter);
        }
    
        public virtual ObjectResult<SP_GetProductVaraitions_Result> SP_GetProductVaraitions(Nullable<long> productID, string lang, string imageServer)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetProductVaraitions_Result>("SP_GetProductVaraitions", productIDParameter, langParameter, imageServerParameter);
        }
    
        public virtual int SP_GetPublishedProducts(Nullable<System.DateTime> currentDateTime, string search, Nullable<long> categoryID, Nullable<long> vendorID, Nullable<long> brandID, Nullable<decimal> minPrice, Nullable<decimal> maxPrice, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string filters, string lang, string imageServer, Nullable<bool> isFeatured, Nullable<bool> isRecommended, Nullable<bool> isSale)
        {
            var currentDateTimeParameter = currentDateTime.HasValue ?
                new ObjectParameter("CurrentDateTime", currentDateTime) :
                new ObjectParameter("CurrentDateTime", typeof(System.DateTime));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(long));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(long));
    
            var minPriceParameter = minPrice.HasValue ?
                new ObjectParameter("MinPrice", minPrice) :
                new ObjectParameter("MinPrice", typeof(decimal));
    
            var maxPriceParameter = maxPrice.HasValue ?
                new ObjectParameter("MaxPrice", maxPrice) :
                new ObjectParameter("MaxPrice", typeof(decimal));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var filtersParameter = filters != null ?
                new ObjectParameter("Filters", filters) :
                new ObjectParameter("Filters", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            var isFeaturedParameter = isFeatured.HasValue ?
                new ObjectParameter("IsFeatured", isFeatured) :
                new ObjectParameter("IsFeatured", typeof(bool));
    
            var isRecommendedParameter = isRecommended.HasValue ?
                new ObjectParameter("IsRecommended", isRecommended) :
                new ObjectParameter("IsRecommended", typeof(bool));
    
            var isSaleParameter = isSale.HasValue ?
                new ObjectParameter("IsSale", isSale) :
                new ObjectParameter("IsSale", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetPublishedProducts", currentDateTimeParameter, searchParameter, categoryIDParameter, vendorIDParameter, brandIDParameter, minPriceParameter, maxPriceParameter, pageSizeParameter, pageNumberParameter, sortByParameter, filtersParameter, langParameter, imageServerParameter, isFeaturedParameter, isRecommendedParameter, isSaleParameter);
        }
    
        public virtual ObjectResult<SP_GetRelatedProducts_Result> SP_GetRelatedProducts(Nullable<System.DateTime> currentDateTime, Nullable<long> productID, string lang, string imageServer)
        {
            var currentDateTimeParameter = currentDateTime.HasValue ?
                new ObjectParameter("CurrentDateTime", currentDateTime) :
                new ObjectParameter("CurrentDateTime", typeof(System.DateTime));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetRelatedProducts_Result>("SP_GetRelatedProducts", currentDateTimeParameter, productIDParameter, langParameter, imageServerParameter);
        }
    
        public virtual ObjectResult<SP_GetRoutesWithUserRolePrivileges_Result> SP_GetRoutesWithUserRolePrivileges(string type, Nullable<long> userRoleID)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var userRoleIDParameter = userRoleID.HasValue ?
                new ObjectParameter("UserRoleID", userRoleID) :
                new ObjectParameter("UserRoleID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetRoutesWithUserRolePrivileges_Result>("SP_GetRoutesWithUserRolePrivileges", typeParameter, userRoleIDParameter);
        }
    
        public virtual ObjectResult<SP_GetRoutesWithVendorUserRolePrivileges_Result> SP_GetRoutesWithVendorUserRolePrivileges(string type, Nullable<long> userRoleID)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var userRoleIDParameter = userRoleID.HasValue ?
                new ObjectParameter("UserRoleID", userRoleID) :
                new ObjectParameter("UserRoleID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetRoutesWithVendorUserRolePrivileges_Result>("SP_GetRoutesWithVendorUserRolePrivileges", typeParameter, userRoleIDParameter);
        }
    
        public virtual ObjectResult<SP_GetserviceRatings_Result> SP_GetserviceRatings(Nullable<long> serviceID)
        {
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetserviceRatings_Result>("SP_GetserviceRatings", serviceIDParameter);
        }
    
        public virtual ObjectResult<SP_GetStaffDashboardStats_Result> SP_GetStaffDashboardStats(Nullable<long> staffID)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetStaffDashboardStats_Result>("SP_GetStaffDashboardStats", staffIDParameter);
        }
    
        public virtual ObjectResult<SP_GetTicketConversation_Result> SP_GetTicketConversation(Nullable<int> ticketID)
        {
            var ticketIDParameter = ticketID.HasValue ?
                new ObjectParameter("TicketID", ticketID) :
                new ObjectParameter("TicketID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTicketConversation_Result>("SP_GetTicketConversation", ticketIDParameter);
        }
    
        public virtual ObjectResult<SP_GetTopCategories_Result> SP_GetTopCategories(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> vendorID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTopCategories_Result>("SP_GetTopCategories", startDateParameter, endDateParameter, vendorIDParameter);
        }
    
        public virtual ObjectResult<SP_GetTopCustomers_Result> SP_GetTopCustomers(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> vendorID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTopCustomers_Result>("SP_GetTopCustomers", startDateParameter, endDateParameter, vendorIDParameter);
        }
    
        public virtual ObjectResult<SP_GetTopVendors_Result> SP_GetTopVendors(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> vendorID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTopVendors_Result>("SP_GetTopVendors", startDateParameter, endDateParameter, vendorIDParameter);
        }
    
        public virtual ObjectResult<SP_GetVendorBookings_Result> SP_GetVendorBookings(Nullable<long> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetVendorBookings_Result>("SP_GetVendorBookings", vendorIDParameter);
        }
    
        public virtual ObjectResult<SP_GetVendorCategories_Result> SP_GetVendorCategories(Nullable<long> vendorID, string lang)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetVendorCategories_Result>("SP_GetVendorCategories", vendorIDParameter, langParameter);
        }
    
        public virtual ObjectResult<SP_GetVendorDashboardBookingGraphByDateRange_Result> SP_GetVendorDashboardBookingGraphByDateRange(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> vendorID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetVendorDashboardBookingGraphByDateRange_Result>("SP_GetVendorDashboardBookingGraphByDateRange", startDateParameter, endDateParameter, vendorIDParameter);
        }
    
        public virtual ObjectResult<SP_GetVendorDashboardStats_Result> SP_GetVendorDashboardStats(Nullable<long> vendorID, Nullable<System.DateTime> currrentDate)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            var currrentDateParameter = currrentDate.HasValue ?
                new ObjectParameter("CurrrentDate", currrentDate) :
                new ObjectParameter("CurrrentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetVendorDashboardStats_Result>("SP_GetVendorDashboardStats", vendorIDParameter, currrentDateParameter);
        }
    
        public virtual ObjectResult<SP_GetVendorDashboardStatsByDateRange_Result> SP_GetVendorDashboardStatsByDateRange(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> vendorID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetVendorDashboardStatsByDateRange_Result>("SP_GetVendorDashboardStatsByDateRange", startDateParameter, endDateParameter, vendorIDParameter);
        }
    
        public virtual ObjectResult<SP_GetVendorDashboardStatsByRange_Result> SP_GetVendorDashboardStatsByRange(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> vendorID)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetVendorDashboardStatsByRange_Result>("SP_GetVendorDashboardStatsByRange", startDateParameter, endDateParameter, vendorIDParameter);
        }
    
        public virtual ObjectResult<SP_GetVendorDashboardYearlyRevenueGraph_Result> SP_GetVendorDashboardYearlyRevenueGraph(string year, Nullable<long> vendorID)
        {
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetVendorDashboardYearlyRevenueGraph_Result>("SP_GetVendorDashboardYearlyRevenueGraph", yearParameter, vendorIDParameter);
        }
    
        public virtual ObjectResult<SP_GetVendorOrders_Result> SP_GetVendorOrders(Nullable<long> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetVendorOrders_Result>("SP_GetVendorOrders", vendorIDParameter);
        }
    
        public virtual ObjectResult<SP_GetVendorRatings_Result> SP_GetVendorRatings(Nullable<long> vendorID, Nullable<long> pageNumber, string imageServer)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(long));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetVendorRatings_Result>("SP_GetVendorRatings", vendorIDParameter, pageNumberParameter, imageServerParameter);
        }
    
        public virtual int SP_InsertPropertyProgress(Nullable<int> progressid)
        {
            var progressidParameter = progressid.HasValue ?
                new ObjectParameter("progressid", progressid) :
                new ObjectParameter("progressid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertPropertyProgress", progressidParameter);
        }
    
        public virtual int SP_MarkNotificationsAsDelivered(Nullable<long> receiverID, string receiverType)
        {
            var receiverIDParameter = receiverID.HasValue ?
                new ObjectParameter("ReceiverID", receiverID) :
                new ObjectParameter("ReceiverID", typeof(long));
    
            var receiverTypeParameter = receiverType != null ?
                new ObjectParameter("ReceiverType", receiverType) :
                new ObjectParameter("ReceiverType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MarkNotificationsAsDelivered", receiverIDParameter, receiverTypeParameter);
        }
    
        public virtual int SP_MarkNotificationsAsRead(Nullable<long> receiverID, string receiverType)
        {
            var receiverIDParameter = receiverID.HasValue ?
                new ObjectParameter("ReceiverID", receiverID) :
                new ObjectParameter("ReceiverID", typeof(long));
    
            var receiverTypeParameter = receiverType != null ?
                new ObjectParameter("ReceiverType", receiverType) :
                new ObjectParameter("ReceiverType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MarkNotificationsAsRead", receiverIDParameter, receiverTypeParameter);
        }
    
        public virtual int SP_MarkNotificationsAsSeen(Nullable<long> receiverID, string receiverType)
        {
            var receiverIDParameter = receiverID.HasValue ?
                new ObjectParameter("ReceiverID", receiverID) :
                new ObjectParameter("ReceiverID", typeof(long));
    
            var receiverTypeParameter = receiverType != null ?
                new ObjectParameter("ReceiverType", receiverType) :
                new ObjectParameter("ReceiverType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_MarkNotificationsAsSeen", receiverIDParameter, receiverTypeParameter);
        }
    
        public virtual int SP_NotifyAdminAndVendors(Nullable<long> notificationID, string receiverType, Nullable<long> vendorID)
        {
            var notificationIDParameter = notificationID.HasValue ?
                new ObjectParameter("NotificationID", notificationID) :
                new ObjectParameter("NotificationID", typeof(long));
    
            var receiverTypeParameter = receiverType != null ?
                new ObjectParameter("ReceiverType", receiverType) :
                new ObjectParameter("ReceiverType", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_NotifyAdminAndVendors", notificationIDParameter, receiverTypeParameter, vendorIDParameter);
        }
    
        public virtual int SP_RemoveNotification(Nullable<long> recordID, string module, Nullable<long> notificationID)
        {
            var recordIDParameter = recordID.HasValue ?
                new ObjectParameter("RecordID", recordID) :
                new ObjectParameter("RecordID", typeof(long));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            var notificationIDParameter = notificationID.HasValue ?
                new ObjectParameter("NotificationID", notificationID) :
                new ObjectParameter("NotificationID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RemoveNotification", recordIDParameter, moduleParameter, notificationIDParameter);
        }
    
        public virtual int SP_SoftDeleteUnitsByPropID(Nullable<long> propertyId)
        {
            var propertyIdParameter = propertyId.HasValue ?
                new ObjectParameter("PropertyId", propertyId) :
                new ObjectParameter("PropertyId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SoftDeleteUnitsByPropID", propertyIdParameter);
        }
    
        public virtual int SP_UpdateProductAttributesVariationUsage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateProductAttributesVariationUsage");
        }
    
        public virtual ObjectResult<SP_GetCustomerServiceBookings_Result> SP_GetCustomerServiceBookings(Nullable<long> customerID, string status, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string lang, string imageServer)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCustomerServiceBookings_Result>("SP_GetCustomerServiceBookings", customerIDParameter, statusParameter, pageSizeParameter, pageNumberParameter, sortByParameter, langParameter, imageServerParameter);
        }
    
        public virtual int PR_InsertProjectTags(Nullable<long> projectID, string projectTags)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(long));
    
            var projectTagsParameter = projectTags != null ?
                new ObjectParameter("ProjectTags", projectTags) :
                new ObjectParameter("ProjectTags", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PR_InsertProjectTags", projectIDParameter, projectTagsParameter);
        }
    
        public virtual ObjectResult<SP_GetFilteredProjects_Result> SP_GetFilteredProjects(string search, Nullable<int> pageSize, Nullable<int> pageNumber, Nullable<int> sortBy, string lang, string imageServer, Nullable<long> projectTypeID)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var imageServerParameter = imageServer != null ?
                new ObjectParameter("ImageServer", imageServer) :
                new ObjectParameter("ImageServer", typeof(string));
    
            var projectTypeIDParameter = projectTypeID.HasValue ?
                new ObjectParameter("ProjectTypeID", projectTypeID) :
                new ObjectParameter("ProjectTypeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetFilteredProjects_Result>("SP_GetFilteredProjects", searchParameter, pageSizeParameter, pageNumberParameter, sortByParameter, langParameter, imageServerParameter, projectTypeIDParameter);
        }
    }
}
